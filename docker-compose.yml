version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: custodian_db
    environment:
      POSTGRES_DB: custodian_db
      POSTGRES_USER: custodian_user
      POSTGRES_PASSWORD: custodian_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - custodian_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U custodian_user -d custodian_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI Backend
  backend:
    build: ./backend
    container_name: custodian_backend
    environment:
      DATABASE_URL: postgresql://custodian_user:custodian_password@db:5432/custodian_db
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - custodian_network
    volumes:
      - ./backend:/app
    restart: unless-stopped

  # Next.js Frontend
  frontend:
    build: ./frontend
    container_name: custodian_frontend
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8000
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - custodian_network
    volumes:
      - ./frontend:/app
      - /app/node_modules
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  custodian_network:
    driver: bridge
